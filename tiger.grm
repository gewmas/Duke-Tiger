structure A = Absyn

%%
%term
    EOF 
  | ID of string
  | INT of int | STRING of string 
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK 
  | LBRACE | RBRACE | DOT 
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF 
  | BREAK | NIL
  | FUNCTION | VAR | TYPE 

%nonterm  decs | dec
          | tydec | ty | tyfields | type_id
          | vardec 
          | fundec
          | exps | exp

%start decs

%pos int
%verbose
%eop EOF
%noshift EOF

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE 
  DO OF NIL

%prefer THEN ELSE LPAREN

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%%

decs : dec ()
    | dec decs ()
    |   ()
dec : tydec ()
    | vardec ()
    | fundec ()

tydec : TYPE type_id EQ ty ()
ty : type_id ()
    | LBRACE tyfields RBRACE ()
    | ARRAY OF type_id ()
tyfields :  ()
          | ID COLON type_id ()
          | tyfields COMMA tyfields ()

vardec : VAR ID ASSIGN exp ()
      | VAR ID COLON type_id ASSIGN exp ()

fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp ()
      | FUNCTION ID LPAREN tyfields RPAREN COLON type_id EQ exp ()

exps : exp ()
    | exp exps ()
    | ()
exp : LET decs IN exps END ()




