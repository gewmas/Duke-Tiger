1 shift/reduce conflict

error:  state 100: shift/reduce conflict (shift LBRACK, reduce by rule 54)

state 0:

	startExp : . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 3
	startExp	goto 141
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 1:

	exp : lvalue .  (reduce by rule 22)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	EOF	reduce by rule 22
	COMMA	reduce by rule 22
	SEMICOLON	reduce by rule 22
	RPAREN	reduce by rule 22
	LBRACK	shift 17
	RBRACK	reduce by rule 22
	RBRACE	reduce by rule 22
	DOT	shift 16
	PLUS	reduce by rule 22
	MINUS	reduce by rule 22
	TIMES	reduce by rule 22
	DIVIDE	reduce by rule 22
	EQ	reduce by rule 22
	NEQ	reduce by rule 22
	LT	reduce by rule 22
	LE	reduce by rule 22
	GT	reduce by rule 22
	GE	reduce by rule 22
	AND	reduce by rule 22
	OR	reduce by rule 22
	ASSIGN	shift 15
	THEN	reduce by rule 22
	ELSE	reduce by rule 22
	TO	reduce by rule 22
	DO	reduce by rule 22
	IN	reduce by rule 22
	END	reduce by rule 22
	FUNCTION	reduce by rule 22
	VAR	reduce by rule 22
	TYPE	reduce by rule 22


	.	error


state 2:

	exp : recordExp .  (reduce by rule 38)

	EOF	reduce by rule 38
	COMMA	reduce by rule 38
	SEMICOLON	reduce by rule 38
	RPAREN	reduce by rule 38
	RBRACK	reduce by rule 38
	RBRACE	reduce by rule 38
	PLUS	reduce by rule 38
	MINUS	reduce by rule 38
	TIMES	reduce by rule 38
	DIVIDE	reduce by rule 38
	EQ	reduce by rule 38
	NEQ	reduce by rule 38
	LT	reduce by rule 38
	LE	reduce by rule 38
	GT	reduce by rule 38
	GE	reduce by rule 38
	AND	reduce by rule 38
	OR	reduce by rule 38
	THEN	reduce by rule 38
	ELSE	reduce by rule 38
	TO	reduce by rule 38
	DO	reduce by rule 38
	IN	reduce by rule 38
	END	reduce by rule 38
	FUNCTION	reduce by rule 38
	VAR	reduce by rule 38
	TYPE	reduce by rule 38


	.	error


state 3:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	startExp : exp .  (reduce by rule 18)

	EOF	reduce by rule 18
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 4:

	exp : NIL .  (reduce by rule 23)

	EOF	reduce by rule 23
	COMMA	reduce by rule 23
	SEMICOLON	reduce by rule 23
	RPAREN	reduce by rule 23
	RBRACK	reduce by rule 23
	RBRACE	reduce by rule 23
	PLUS	reduce by rule 23
	MINUS	reduce by rule 23
	TIMES	reduce by rule 23
	DIVIDE	reduce by rule 23
	EQ	reduce by rule 23
	NEQ	reduce by rule 23
	LT	reduce by rule 23
	LE	reduce by rule 23
	GT	reduce by rule 23
	GE	reduce by rule 23
	AND	reduce by rule 23
	OR	reduce by rule 23
	THEN	reduce by rule 23
	ELSE	reduce by rule 23
	TO	reduce by rule 23
	DO	reduce by rule 23
	IN	reduce by rule 23
	END	reduce by rule 23
	FUNCTION	reduce by rule 23
	VAR	reduce by rule 23
	TYPE	reduce by rule 23


	.	error


state 5:

	exp : BREAK .  (reduce by rule 40)

	EOF	reduce by rule 40
	COMMA	reduce by rule 40
	SEMICOLON	reduce by rule 40
	RPAREN	reduce by rule 40
	RBRACK	reduce by rule 40
	RBRACE	reduce by rule 40
	PLUS	reduce by rule 40
	MINUS	reduce by rule 40
	TIMES	reduce by rule 40
	DIVIDE	reduce by rule 40
	EQ	reduce by rule 40
	NEQ	reduce by rule 40
	LT	reduce by rule 40
	LE	reduce by rule 40
	GT	reduce by rule 40
	GE	reduce by rule 40
	AND	reduce by rule 40
	OR	reduce by rule 40
	THEN	reduce by rule 40
	ELSE	reduce by rule 40
	TO	reduce by rule 40
	DO	reduce by rule 40
	IN	reduce by rule 40
	END	reduce by rule 40
	FUNCTION	reduce by rule 40
	VAR	reduce by rule 40
	TYPE	reduce by rule 40


	.	error


state 6:

	exp : LET . decs IN letExps END 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decs	goto 34
	dec	goto 33
	tydec	goto 32
	vardec	goto 31
	fundec	goto 30

	.	error


state 7:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 38


	.	error


state 8:

	exp : WHILE . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 39
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 9:

	exp : IF . exp THEN exp 
	exp : IF . exp THEN exp ELSE exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 40
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 10:

	exp : MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 41
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 11:

	exp : LPAREN . exp SEMICOLON letExps RPAREN 
	exp : LPAREN . RPAREN 
	exp : LPAREN . exp RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	RPAREN	shift 43
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 42
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 12:

	exp : STRING .  (reduce by rule 20)

	EOF	reduce by rule 20
	COMMA	reduce by rule 20
	SEMICOLON	reduce by rule 20
	RPAREN	reduce by rule 20
	RBRACK	reduce by rule 20
	RBRACE	reduce by rule 20
	PLUS	reduce by rule 20
	MINUS	reduce by rule 20
	TIMES	reduce by rule 20
	DIVIDE	reduce by rule 20
	EQ	reduce by rule 20
	NEQ	reduce by rule 20
	LT	reduce by rule 20
	LE	reduce by rule 20
	GT	reduce by rule 20
	GE	reduce by rule 20
	AND	reduce by rule 20
	OR	reduce by rule 20
	THEN	reduce by rule 20
	ELSE	reduce by rule 20
	TO	reduce by rule 20
	DO	reduce by rule 20
	IN	reduce by rule 20
	END	reduce by rule 20
	FUNCTION	reduce by rule 20
	VAR	reduce by rule 20
	TYPE	reduce by rule 20


	.	error


state 13:

	exp : INT .  (reduce by rule 19)

	EOF	reduce by rule 19
	COMMA	reduce by rule 19
	SEMICOLON	reduce by rule 19
	RPAREN	reduce by rule 19
	RBRACK	reduce by rule 19
	RBRACE	reduce by rule 19
	PLUS	reduce by rule 19
	MINUS	reduce by rule 19
	TIMES	reduce by rule 19
	DIVIDE	reduce by rule 19
	EQ	reduce by rule 19
	NEQ	reduce by rule 19
	LT	reduce by rule 19
	LE	reduce by rule 19
	GT	reduce by rule 19
	GE	reduce by rule 19
	AND	reduce by rule 19
	OR	reduce by rule 19
	THEN	reduce by rule 19
	ELSE	reduce by rule 19
	TO	reduce by rule 19
	DO	reduce by rule 19
	IN	reduce by rule 19
	END	reduce by rule 19
	FUNCTION	reduce by rule 19
	VAR	reduce by rule 19
	TYPE	reduce by rule 19


	.	error


state 14:

	exp : ID . LPAREN exps RPAREN 
	recordExp : ID . LBRACE RBRACE 
	recordExp : ID . LBRACE recordList RBRACE 
	lvalue : ID .  (reduce by rule 54)

	EOF	reduce by rule 54
	COMMA	reduce by rule 54
	SEMICOLON	reduce by rule 54
	LPAREN	shift 45
	RPAREN	reduce by rule 54
	LBRACK	reduce by rule 54
	RBRACK	reduce by rule 54
	LBRACE	shift 44
	RBRACE	reduce by rule 54
	DOT	reduce by rule 54
	PLUS	reduce by rule 54
	MINUS	reduce by rule 54
	TIMES	reduce by rule 54
	DIVIDE	reduce by rule 54
	EQ	reduce by rule 54
	NEQ	reduce by rule 54
	LT	reduce by rule 54
	LE	reduce by rule 54
	GT	reduce by rule 54
	GE	reduce by rule 54
	AND	reduce by rule 54
	OR	reduce by rule 54
	ASSIGN	reduce by rule 54
	THEN	reduce by rule 54
	ELSE	reduce by rule 54
	TO	reduce by rule 54
	DO	reduce by rule 54
	IN	reduce by rule 54
	END	reduce by rule 54
	FUNCTION	reduce by rule 54
	VAR	reduce by rule 54
	TYPE	reduce by rule 54


	.	error


state 15:

	exp : lvalue ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 46
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 16:

	lvalue : lvalue DOT . ID 

	ID	shift 47


	.	error


state 17:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 48
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 18:

	exp : exp OR . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 49
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 19:

	exp : exp AND . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 50
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 20:

	exp : exp GE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 51
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 21:

	exp : exp GT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 52
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 22:

	exp : exp LE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 53
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 23:

	exp : exp LT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 54
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 24:

	exp : exp NEQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 55
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 25:

	exp : exp EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 56
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 26:

	exp : exp DIVIDE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 57
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 27:

	exp : exp TIMES . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 58
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 28:

	exp : exp MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 59
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 29:

	exp : exp PLUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 60
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 30:

	dec : fundec .  (reduce by rule 4)

	IN	reduce by rule 4
	FUNCTION	reduce by rule 4
	VAR	reduce by rule 4
	TYPE	reduce by rule 4


	.	error


state 31:

	dec : vardec .  (reduce by rule 3)

	IN	reduce by rule 3
	FUNCTION	reduce by rule 3
	VAR	reduce by rule 3
	TYPE	reduce by rule 3


	.	error


state 32:

	dec : tydec .  (reduce by rule 2)

	IN	reduce by rule 2
	FUNCTION	reduce by rule 2
	VAR	reduce by rule 2
	TYPE	reduce by rule 2


	.	error


state 33:

	decs : dec .  (reduce by rule 0)
	decs : dec . decs 

	IN	reduce by rule 0
	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decs	goto 61
	dec	goto 33
	tydec	goto 32
	vardec	goto 31
	fundec	goto 30

	.	error


state 34:

	exp : LET decs . IN letExps END 

	IN	shift 62


	.	error


state 35:

	tydec : TYPE . ID EQ ty 

	ID	shift 63


	.	error


state 36:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID ASSIGN arrayList 
	vardec : VAR . ID COLON ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN arrayList 

	ID	shift 64


	.	error


state 37:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 65


	.	error


state 38:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 66


	.	error


state 39:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp . DO exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 67


	.	error


state 40:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp . THEN exp 
	exp : IF exp . THEN exp ELSE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	shift 68


	.	error


state 41:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : MINUS exp .  (reduce by rule 37)

	EOF	reduce by rule 37
	COMMA	reduce by rule 37
	SEMICOLON	reduce by rule 37
	RPAREN	reduce by rule 37
	RBRACK	reduce by rule 37
	RBRACE	reduce by rule 37
	PLUS	reduce by rule 37
	MINUS	reduce by rule 37
	TIMES	reduce by rule 37
	DIVIDE	reduce by rule 37
	EQ	reduce by rule 37
	NEQ	reduce by rule 37
	LT	reduce by rule 37
	LE	reduce by rule 37
	GT	reduce by rule 37
	GE	reduce by rule 37
	AND	reduce by rule 37
	OR	reduce by rule 37
	THEN	reduce by rule 37
	ELSE	reduce by rule 37
	TO	reduce by rule 37
	DO	reduce by rule 37
	IN	reduce by rule 37
	END	reduce by rule 37
	FUNCTION	reduce by rule 37
	VAR	reduce by rule 37
	TYPE	reduce by rule 37


	.	error


state 42:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : LPAREN exp . SEMICOLON letExps RPAREN 
	exp : LPAREN exp . RPAREN 

	SEMICOLON	shift 70
	RPAREN	shift 69
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 43:

	exp : LPAREN RPAREN .  (reduce by rule 41)

	EOF	reduce by rule 41
	COMMA	reduce by rule 41
	SEMICOLON	reduce by rule 41
	RPAREN	reduce by rule 41
	RBRACK	reduce by rule 41
	RBRACE	reduce by rule 41
	PLUS	reduce by rule 41
	MINUS	reduce by rule 41
	TIMES	reduce by rule 41
	DIVIDE	reduce by rule 41
	EQ	reduce by rule 41
	NEQ	reduce by rule 41
	LT	reduce by rule 41
	LE	reduce by rule 41
	GT	reduce by rule 41
	GE	reduce by rule 41
	AND	reduce by rule 41
	OR	reduce by rule 41
	THEN	reduce by rule 41
	ELSE	reduce by rule 41
	TO	reduce by rule 41
	DO	reduce by rule 41
	IN	reduce by rule 41
	END	reduce by rule 41
	FUNCTION	reduce by rule 41
	VAR	reduce by rule 41
	TYPE	reduce by rule 41


	.	error


state 44:

	recordExp : ID LBRACE . RBRACE 
	recordExp : ID LBRACE . recordList RBRACE 

	ID	shift 73
	RBRACE	shift 72

	recordList	goto 71

	.	error


state 45:

	exp : ID LPAREN . exps RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	RPAREN	reduce by rule 48
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exps	goto 75
	exp	goto 74
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 46:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : lvalue ASSIGN exp .  (reduce by rule 39)

	EOF	reduce by rule 39
	COMMA	reduce by rule 39
	SEMICOLON	reduce by rule 39
	RPAREN	reduce by rule 39
	RBRACK	reduce by rule 39
	RBRACE	reduce by rule 39
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	reduce by rule 39
	ELSE	reduce by rule 39
	TO	reduce by rule 39
	DO	reduce by rule 39
	IN	reduce by rule 39
	END	reduce by rule 39
	FUNCTION	reduce by rule 39
	VAR	reduce by rule 39
	TYPE	reduce by rule 39


	.	error


state 47:

	lvalue : lvalue DOT ID .  (reduce by rule 55)

	EOF	reduce by rule 55
	COMMA	reduce by rule 55
	SEMICOLON	reduce by rule 55
	RPAREN	reduce by rule 55
	LBRACK	reduce by rule 55
	RBRACK	reduce by rule 55
	RBRACE	reduce by rule 55
	DOT	reduce by rule 55
	PLUS	reduce by rule 55
	MINUS	reduce by rule 55
	TIMES	reduce by rule 55
	DIVIDE	reduce by rule 55
	EQ	reduce by rule 55
	NEQ	reduce by rule 55
	LT	reduce by rule 55
	LE	reduce by rule 55
	GT	reduce by rule 55
	GE	reduce by rule 55
	AND	reduce by rule 55
	OR	reduce by rule 55
	ASSIGN	reduce by rule 55
	THEN	reduce by rule 55
	ELSE	reduce by rule 55
	TO	reduce by rule 55
	DO	reduce by rule 55
	IN	reduce by rule 55
	END	reduce by rule 55
	FUNCTION	reduce by rule 55
	VAR	reduce by rule 55
	TYPE	reduce by rule 55


	.	error


state 48:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 76
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 49:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 35)

	EOF	reduce by rule 35
	COMMA	reduce by rule 35
	SEMICOLON	reduce by rule 35
	RPAREN	reduce by rule 35
	RBRACK	reduce by rule 35
	RBRACE	reduce by rule 35
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	reduce by rule 35
	OR	reduce by rule 35
	THEN	reduce by rule 35
	ELSE	reduce by rule 35
	TO	reduce by rule 35
	DO	reduce by rule 35
	IN	reduce by rule 35
	END	reduce by rule 35
	FUNCTION	reduce by rule 35
	VAR	reduce by rule 35
	TYPE	reduce by rule 35


	.	error


state 50:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 34)
	exp : exp . OR exp 

	EOF	reduce by rule 34
	COMMA	reduce by rule 34
	SEMICOLON	reduce by rule 34
	RPAREN	reduce by rule 34
	RBRACK	reduce by rule 34
	RBRACE	reduce by rule 34
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	reduce by rule 34
	OR	reduce by rule 34
	THEN	reduce by rule 34
	ELSE	reduce by rule 34
	TO	reduce by rule 34
	DO	reduce by rule 34
	IN	reduce by rule 34
	END	reduce by rule 34
	FUNCTION	reduce by rule 34
	VAR	reduce by rule 34
	TYPE	reduce by rule 34


	.	error


state 51:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 32)
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 32
	COMMA	reduce by rule 32
	SEMICOLON	reduce by rule 32
	RPAREN	reduce by rule 32
	RBRACK	reduce by rule 32
	RBRACE	reduce by rule 32
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	reduce by rule 32
	NEQ	reduce by rule 32
	LT	reduce by rule 32
	LE	reduce by rule 32
	GT	reduce by rule 32
	GE	reduce by rule 32
	AND	reduce by rule 32
	OR	reduce by rule 32
	THEN	reduce by rule 32
	ELSE	reduce by rule 32
	TO	reduce by rule 32
	DO	reduce by rule 32
	IN	reduce by rule 32
	END	reduce by rule 32
	FUNCTION	reduce by rule 32
	VAR	reduce by rule 32
	TYPE	reduce by rule 32


	.	error


state 52:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 30)
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 30
	COMMA	reduce by rule 30
	SEMICOLON	reduce by rule 30
	RPAREN	reduce by rule 30
	RBRACK	reduce by rule 30
	RBRACE	reduce by rule 30
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	reduce by rule 30
	NEQ	reduce by rule 30
	LT	reduce by rule 30
	LE	reduce by rule 30
	GT	reduce by rule 30
	GE	reduce by rule 30
	AND	reduce by rule 30
	OR	reduce by rule 30
	THEN	reduce by rule 30
	ELSE	reduce by rule 30
	TO	reduce by rule 30
	DO	reduce by rule 30
	IN	reduce by rule 30
	END	reduce by rule 30
	FUNCTION	reduce by rule 30
	VAR	reduce by rule 30
	TYPE	reduce by rule 30


	.	error


state 53:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 33)
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 33
	COMMA	reduce by rule 33
	SEMICOLON	reduce by rule 33
	RPAREN	reduce by rule 33
	RBRACK	reduce by rule 33
	RBRACE	reduce by rule 33
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	reduce by rule 33
	NEQ	reduce by rule 33
	LT	reduce by rule 33
	LE	reduce by rule 33
	GT	reduce by rule 33
	GE	reduce by rule 33
	AND	reduce by rule 33
	OR	reduce by rule 33
	THEN	reduce by rule 33
	ELSE	reduce by rule 33
	TO	reduce by rule 33
	DO	reduce by rule 33
	IN	reduce by rule 33
	END	reduce by rule 33
	FUNCTION	reduce by rule 33
	VAR	reduce by rule 33
	TYPE	reduce by rule 33


	.	error


state 54:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 31)
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 31
	COMMA	reduce by rule 31
	SEMICOLON	reduce by rule 31
	RPAREN	reduce by rule 31
	RBRACK	reduce by rule 31
	RBRACE	reduce by rule 31
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	reduce by rule 31
	NEQ	reduce by rule 31
	LT	reduce by rule 31
	LE	reduce by rule 31
	GT	reduce by rule 31
	GE	reduce by rule 31
	AND	reduce by rule 31
	OR	reduce by rule 31
	THEN	reduce by rule 31
	ELSE	reduce by rule 31
	TO	reduce by rule 31
	DO	reduce by rule 31
	IN	reduce by rule 31
	END	reduce by rule 31
	FUNCTION	reduce by rule 31
	VAR	reduce by rule 31
	TYPE	reduce by rule 31


	.	error


state 55:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 29)
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 29
	COMMA	reduce by rule 29
	SEMICOLON	reduce by rule 29
	RPAREN	reduce by rule 29
	RBRACK	reduce by rule 29
	RBRACE	reduce by rule 29
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	reduce by rule 29
	NEQ	reduce by rule 29
	LT	reduce by rule 29
	LE	reduce by rule 29
	GT	reduce by rule 29
	GE	reduce by rule 29
	AND	reduce by rule 29
	OR	reduce by rule 29
	THEN	reduce by rule 29
	ELSE	reduce by rule 29
	TO	reduce by rule 29
	DO	reduce by rule 29
	IN	reduce by rule 29
	END	reduce by rule 29
	FUNCTION	reduce by rule 29
	VAR	reduce by rule 29
	TYPE	reduce by rule 29


	.	error


state 56:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 28)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 28
	COMMA	reduce by rule 28
	SEMICOLON	reduce by rule 28
	RPAREN	reduce by rule 28
	RBRACK	reduce by rule 28
	RBRACE	reduce by rule 28
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	reduce by rule 28
	NEQ	reduce by rule 28
	LT	reduce by rule 28
	LE	reduce by rule 28
	GT	reduce by rule 28
	GE	reduce by rule 28
	AND	reduce by rule 28
	OR	reduce by rule 28
	THEN	reduce by rule 28
	ELSE	reduce by rule 28
	TO	reduce by rule 28
	DO	reduce by rule 28
	IN	reduce by rule 28
	END	reduce by rule 28
	FUNCTION	reduce by rule 28
	VAR	reduce by rule 28
	TYPE	reduce by rule 28


	.	error


state 57:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 25)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 25
	COMMA	reduce by rule 25
	SEMICOLON	reduce by rule 25
	RPAREN	reduce by rule 25
	RBRACK	reduce by rule 25
	RBRACE	reduce by rule 25
	PLUS	reduce by rule 25
	MINUS	reduce by rule 25
	TIMES	reduce by rule 25
	DIVIDE	reduce by rule 25
	EQ	reduce by rule 25
	NEQ	reduce by rule 25
	LT	reduce by rule 25
	LE	reduce by rule 25
	GT	reduce by rule 25
	GE	reduce by rule 25
	AND	reduce by rule 25
	OR	reduce by rule 25
	THEN	reduce by rule 25
	ELSE	reduce by rule 25
	TO	reduce by rule 25
	DO	reduce by rule 25
	IN	reduce by rule 25
	END	reduce by rule 25
	FUNCTION	reduce by rule 25
	VAR	reduce by rule 25
	TYPE	reduce by rule 25


	.	error


state 58:

	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 24)
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 24
	COMMA	reduce by rule 24
	SEMICOLON	reduce by rule 24
	RPAREN	reduce by rule 24
	RBRACK	reduce by rule 24
	RBRACE	reduce by rule 24
	PLUS	reduce by rule 24
	MINUS	reduce by rule 24
	TIMES	reduce by rule 24
	DIVIDE	reduce by rule 24
	EQ	reduce by rule 24
	NEQ	reduce by rule 24
	LT	reduce by rule 24
	LE	reduce by rule 24
	GT	reduce by rule 24
	GE	reduce by rule 24
	AND	reduce by rule 24
	OR	reduce by rule 24
	THEN	reduce by rule 24
	ELSE	reduce by rule 24
	TO	reduce by rule 24
	DO	reduce by rule 24
	IN	reduce by rule 24
	END	reduce by rule 24
	FUNCTION	reduce by rule 24
	VAR	reduce by rule 24
	TYPE	reduce by rule 24


	.	error


state 59:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 27)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 27
	COMMA	reduce by rule 27
	SEMICOLON	reduce by rule 27
	RPAREN	reduce by rule 27
	RBRACK	reduce by rule 27
	RBRACE	reduce by rule 27
	PLUS	reduce by rule 27
	MINUS	reduce by rule 27
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	reduce by rule 27
	NEQ	reduce by rule 27
	LT	reduce by rule 27
	LE	reduce by rule 27
	GT	reduce by rule 27
	GE	reduce by rule 27
	AND	reduce by rule 27
	OR	reduce by rule 27
	THEN	reduce by rule 27
	ELSE	reduce by rule 27
	TO	reduce by rule 27
	DO	reduce by rule 27
	IN	reduce by rule 27
	END	reduce by rule 27
	FUNCTION	reduce by rule 27
	VAR	reduce by rule 27
	TYPE	reduce by rule 27


	.	error


state 60:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 26)
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 26
	COMMA	reduce by rule 26
	SEMICOLON	reduce by rule 26
	RPAREN	reduce by rule 26
	RBRACK	reduce by rule 26
	RBRACE	reduce by rule 26
	PLUS	reduce by rule 26
	MINUS	reduce by rule 26
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	reduce by rule 26
	NEQ	reduce by rule 26
	LT	reduce by rule 26
	LE	reduce by rule 26
	GT	reduce by rule 26
	GE	reduce by rule 26
	AND	reduce by rule 26
	OR	reduce by rule 26
	THEN	reduce by rule 26
	ELSE	reduce by rule 26
	TO	reduce by rule 26
	DO	reduce by rule 26
	IN	reduce by rule 26
	END	reduce by rule 26
	FUNCTION	reduce by rule 26
	VAR	reduce by rule 26
	TYPE	reduce by rule 26


	.	error


state 61:

	decs : dec decs .  (reduce by rule 1)

	IN	reduce by rule 1


	.	error


state 62:

	exp : LET decs IN . letExps END 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	letExps	goto 78
	exp	goto 77
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 63:

	tydec : TYPE ID . EQ ty 

	EQ	shift 79


	.	error


state 64:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . ASSIGN arrayList 
	vardec : VAR ID . COLON ID ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN arrayList 

	COLON	shift 81
	ASSIGN	shift 80


	.	error


state 65:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 82


	.	error


state 66:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 83
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 67:

	exp : WHILE exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 84
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 68:

	exp : IF exp THEN . exp 
	exp : IF exp THEN . exp ELSE exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 85
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 69:

	exp : LPAREN exp RPAREN .  (reduce by rule 42)

	EOF	reduce by rule 42
	COMMA	reduce by rule 42
	SEMICOLON	reduce by rule 42
	RPAREN	reduce by rule 42
	RBRACK	reduce by rule 42
	RBRACE	reduce by rule 42
	PLUS	reduce by rule 42
	MINUS	reduce by rule 42
	TIMES	reduce by rule 42
	DIVIDE	reduce by rule 42
	EQ	reduce by rule 42
	NEQ	reduce by rule 42
	LT	reduce by rule 42
	LE	reduce by rule 42
	GT	reduce by rule 42
	GE	reduce by rule 42
	AND	reduce by rule 42
	OR	reduce by rule 42
	THEN	reduce by rule 42
	ELSE	reduce by rule 42
	TO	reduce by rule 42
	DO	reduce by rule 42
	IN	reduce by rule 42
	END	reduce by rule 42
	FUNCTION	reduce by rule 42
	VAR	reduce by rule 42
	TYPE	reduce by rule 42


	.	error


state 70:

	exp : LPAREN exp SEMICOLON . letExps RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	letExps	goto 86
	exp	goto 77
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 71:

	recordExp : ID LBRACE recordList . RBRACE 

	RBRACE	shift 87


	.	error


state 72:

	recordExp : ID LBRACE RBRACE .  (reduce by rule 57)

	EOF	reduce by rule 57
	COMMA	reduce by rule 57
	SEMICOLON	reduce by rule 57
	RPAREN	reduce by rule 57
	RBRACK	reduce by rule 57
	RBRACE	reduce by rule 57
	PLUS	reduce by rule 57
	MINUS	reduce by rule 57
	TIMES	reduce by rule 57
	DIVIDE	reduce by rule 57
	EQ	reduce by rule 57
	NEQ	reduce by rule 57
	LT	reduce by rule 57
	LE	reduce by rule 57
	GT	reduce by rule 57
	GE	reduce by rule 57
	AND	reduce by rule 57
	OR	reduce by rule 57
	THEN	reduce by rule 57
	ELSE	reduce by rule 57
	TO	reduce by rule 57
	DO	reduce by rule 57
	IN	reduce by rule 57
	END	reduce by rule 57
	FUNCTION	reduce by rule 57
	VAR	reduce by rule 57
	TYPE	reduce by rule 57


	.	error


state 73:

	recordList : ID . EQ exp 
	recordList : ID . EQ arrayList 
	recordList : ID . EQ exp COMMA recordList 

	EQ	shift 88


	.	error


state 74:

	exps : exp .  (reduce by rule 49)
	exps : exp . SEMICOLON exps 
	exps : exp . COMMA exps 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	COMMA	shift 90
	SEMICOLON	shift 89
	RPAREN	reduce by rule 49
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 75:

	exp : ID LPAREN exps . RPAREN 

	RPAREN	shift 91


	.	error


state 76:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 56)

	EOF	reduce by rule 56
	COMMA	reduce by rule 56
	SEMICOLON	reduce by rule 56
	RPAREN	reduce by rule 56
	LBRACK	reduce by rule 56
	RBRACK	reduce by rule 56
	RBRACE	reduce by rule 56
	DOT	reduce by rule 56
	PLUS	reduce by rule 56
	MINUS	reduce by rule 56
	TIMES	reduce by rule 56
	DIVIDE	reduce by rule 56
	EQ	reduce by rule 56
	NEQ	reduce by rule 56
	LT	reduce by rule 56
	LE	reduce by rule 56
	GT	reduce by rule 56
	GE	reduce by rule 56
	AND	reduce by rule 56
	OR	reduce by rule 56
	ASSIGN	reduce by rule 56
	THEN	reduce by rule 56
	ELSE	reduce by rule 56
	TO	reduce by rule 56
	DO	reduce by rule 56
	IN	reduce by rule 56
	END	reduce by rule 56
	FUNCTION	reduce by rule 56
	VAR	reduce by rule 56
	TYPE	reduce by rule 56


	.	error


state 77:

	letExps : exp .  (reduce by rule 52)
	letExps : exp . SEMICOLON letExps 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	SEMICOLON	shift 92
	RPAREN	reduce by rule 52
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	END	reduce by rule 52


	.	error


state 78:

	exp : LET decs IN letExps . END 

	END	shift 93


	.	error


state 79:

	tydec : TYPE ID EQ . ty 

	ID	shift 97
	LBRACE	shift 96
	ARRAY	shift 95

	ty	goto 94

	.	error


state 80:

	vardec : VAR ID ASSIGN . exp 
	vardec : VAR ID ASSIGN . arrayList 

	ID	shift 100
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 99
	recordExp	goto 2
	lvalue	goto 1
	arrayList	goto 98

	.	error


state 81:

	vardec : VAR ID COLON . ID ASSIGN exp 
	vardec : VAR ID COLON . ID ASSIGN arrayList 

	ID	shift 101


	.	error


state 82:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 103
	RPAREN	reduce by rule 9

	tyfields	goto 102

	.	error


state 83:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	TO	shift 104


	.	error


state 84:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp DO exp .  (reduce by rule 44)

	EOF	reduce by rule 44
	COMMA	reduce by rule 44
	SEMICOLON	reduce by rule 44
	RPAREN	reduce by rule 44
	RBRACK	reduce by rule 44
	RBRACE	reduce by rule 44
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	reduce by rule 44
	ELSE	reduce by rule 44
	TO	reduce by rule 44
	DO	reduce by rule 44
	IN	reduce by rule 44
	END	reduce by rule 44
	FUNCTION	reduce by rule 44
	VAR	reduce by rule 44
	TYPE	reduce by rule 44


	.	error


state 85:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp .  (reduce by rule 46)
	exp : IF exp THEN exp . ELSE exp 

	EOF	reduce by rule 46
	COMMA	reduce by rule 46
	SEMICOLON	reduce by rule 46
	RPAREN	reduce by rule 46
	RBRACK	reduce by rule 46
	RBRACE	reduce by rule 46
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	reduce by rule 46
	ELSE	shift 105
	TO	reduce by rule 46
	DO	reduce by rule 46
	IN	reduce by rule 46
	END	reduce by rule 46
	FUNCTION	reduce by rule 46
	VAR	reduce by rule 46
	TYPE	reduce by rule 46


	.	error


state 86:

	exp : LPAREN exp SEMICOLON letExps . RPAREN 

	RPAREN	shift 106


	.	error


state 87:

	recordExp : ID LBRACE recordList RBRACE .  (reduce by rule 58)

	EOF	reduce by rule 58
	COMMA	reduce by rule 58
	SEMICOLON	reduce by rule 58
	RPAREN	reduce by rule 58
	RBRACK	reduce by rule 58
	RBRACE	reduce by rule 58
	PLUS	reduce by rule 58
	MINUS	reduce by rule 58
	TIMES	reduce by rule 58
	DIVIDE	reduce by rule 58
	EQ	reduce by rule 58
	NEQ	reduce by rule 58
	LT	reduce by rule 58
	LE	reduce by rule 58
	GT	reduce by rule 58
	GE	reduce by rule 58
	AND	reduce by rule 58
	OR	reduce by rule 58
	THEN	reduce by rule 58
	ELSE	reduce by rule 58
	TO	reduce by rule 58
	DO	reduce by rule 58
	IN	reduce by rule 58
	END	reduce by rule 58
	FUNCTION	reduce by rule 58
	VAR	reduce by rule 58
	TYPE	reduce by rule 58


	.	error


state 88:

	recordList : ID EQ . exp 
	recordList : ID EQ . arrayList 
	recordList : ID EQ . exp COMMA recordList 

	ID	shift 100
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 108
	recordExp	goto 2
	lvalue	goto 1
	arrayList	goto 107

	.	error


state 89:

	exps : exp SEMICOLON . exps 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	RPAREN	reduce by rule 48
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exps	goto 109
	exp	goto 74
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 90:

	exps : exp COMMA . exps 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	RPAREN	reduce by rule 48
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exps	goto 110
	exp	goto 74
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 91:

	exp : ID LPAREN exps RPAREN .  (reduce by rule 21)

	EOF	reduce by rule 21
	COMMA	reduce by rule 21
	SEMICOLON	reduce by rule 21
	RPAREN	reduce by rule 21
	RBRACK	reduce by rule 21
	RBRACE	reduce by rule 21
	PLUS	reduce by rule 21
	MINUS	reduce by rule 21
	TIMES	reduce by rule 21
	DIVIDE	reduce by rule 21
	EQ	reduce by rule 21
	NEQ	reduce by rule 21
	LT	reduce by rule 21
	LE	reduce by rule 21
	GT	reduce by rule 21
	GE	reduce by rule 21
	AND	reduce by rule 21
	OR	reduce by rule 21
	THEN	reduce by rule 21
	ELSE	reduce by rule 21
	TO	reduce by rule 21
	DO	reduce by rule 21
	IN	reduce by rule 21
	END	reduce by rule 21
	FUNCTION	reduce by rule 21
	VAR	reduce by rule 21
	TYPE	reduce by rule 21


	.	error


state 92:

	letExps : exp SEMICOLON . letExps 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	letExps	goto 111
	exp	goto 77
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 93:

	exp : LET decs IN letExps END .  (reduce by rule 43)

	EOF	reduce by rule 43
	COMMA	reduce by rule 43
	SEMICOLON	reduce by rule 43
	RPAREN	reduce by rule 43
	RBRACK	reduce by rule 43
	RBRACE	reduce by rule 43
	PLUS	reduce by rule 43
	MINUS	reduce by rule 43
	TIMES	reduce by rule 43
	DIVIDE	reduce by rule 43
	EQ	reduce by rule 43
	NEQ	reduce by rule 43
	LT	reduce by rule 43
	LE	reduce by rule 43
	GT	reduce by rule 43
	GE	reduce by rule 43
	AND	reduce by rule 43
	OR	reduce by rule 43
	THEN	reduce by rule 43
	ELSE	reduce by rule 43
	TO	reduce by rule 43
	DO	reduce by rule 43
	IN	reduce by rule 43
	END	reduce by rule 43
	FUNCTION	reduce by rule 43
	VAR	reduce by rule 43
	TYPE	reduce by rule 43


	.	error


state 94:

	tydec : TYPE ID EQ ty .  (reduce by rule 5)

	IN	reduce by rule 5
	FUNCTION	reduce by rule 5
	VAR	reduce by rule 5
	TYPE	reduce by rule 5


	.	error


state 95:

	ty : ARRAY . OF ID 

	OF	shift 112


	.	error


state 96:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 103
	RBRACE	reduce by rule 9

	tyfields	goto 113

	.	error


state 97:

	ty : ID .  (reduce by rule 6)

	IN	reduce by rule 6
	FUNCTION	reduce by rule 6
	VAR	reduce by rule 6
	TYPE	reduce by rule 6


	.	error


state 98:

	vardec : VAR ID ASSIGN arrayList .  (reduce by rule 13)

	IN	reduce by rule 13
	FUNCTION	reduce by rule 13
	VAR	reduce by rule 13
	TYPE	reduce by rule 13


	.	error


state 99:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 12)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	IN	reduce by rule 12
	FUNCTION	reduce by rule 12
	VAR	reduce by rule 12
	TYPE	reduce by rule 12


	.	error

error:  state 100: shift/reduce conflict (shift LBRACK, reduce by rule 54)

state 100:

	exp : ID . LPAREN exps RPAREN 
	recordExp : ID . LBRACE RBRACE 
	recordExp : ID . LBRACE recordList RBRACE 
	lvalue : ID .  (reduce by rule 54)
	arrayList : ID . LBRACK exp RBRACK OF exp 

	COMMA	reduce by rule 54
	LPAREN	shift 45
	LBRACK	shift 114
	LBRACE	shift 44
	RBRACE	reduce by rule 54
	DOT	reduce by rule 54
	PLUS	reduce by rule 54
	MINUS	reduce by rule 54
	TIMES	reduce by rule 54
	DIVIDE	reduce by rule 54
	EQ	reduce by rule 54
	NEQ	reduce by rule 54
	LT	reduce by rule 54
	LE	reduce by rule 54
	GT	reduce by rule 54
	GE	reduce by rule 54
	AND	reduce by rule 54
	OR	reduce by rule 54
	ASSIGN	reduce by rule 54
	IN	reduce by rule 54
	FUNCTION	reduce by rule 54
	VAR	reduce by rule 54
	TYPE	reduce by rule 54


	.	error


state 101:

	vardec : VAR ID COLON ID . ASSIGN exp 
	vardec : VAR ID COLON ID . ASSIGN arrayList 

	ASSIGN	shift 115


	.	error


state 102:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 116


	.	error


state 103:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 117


	.	error


state 104:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 118
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 105:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 119
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 106:

	exp : LPAREN exp SEMICOLON letExps RPAREN .  (reduce by rule 36)

	EOF	reduce by rule 36
	COMMA	reduce by rule 36
	SEMICOLON	reduce by rule 36
	RPAREN	reduce by rule 36
	RBRACK	reduce by rule 36
	RBRACE	reduce by rule 36
	PLUS	reduce by rule 36
	MINUS	reduce by rule 36
	TIMES	reduce by rule 36
	DIVIDE	reduce by rule 36
	EQ	reduce by rule 36
	NEQ	reduce by rule 36
	LT	reduce by rule 36
	LE	reduce by rule 36
	GT	reduce by rule 36
	GE	reduce by rule 36
	AND	reduce by rule 36
	OR	reduce by rule 36
	THEN	reduce by rule 36
	ELSE	reduce by rule 36
	TO	reduce by rule 36
	DO	reduce by rule 36
	IN	reduce by rule 36
	END	reduce by rule 36
	FUNCTION	reduce by rule 36
	VAR	reduce by rule 36
	TYPE	reduce by rule 36


	.	error


state 107:

	recordList : ID EQ arrayList .  (reduce by rule 60)

	RBRACE	reduce by rule 60


	.	error


state 108:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	recordList : ID EQ exp .  (reduce by rule 59)
	recordList : ID EQ exp . COMMA recordList 

	COMMA	shift 120
	RBRACE	reduce by rule 59
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 109:

	exps : exp SEMICOLON exps .  (reduce by rule 50)

	RPAREN	reduce by rule 50


	.	error


state 110:

	exps : exp COMMA exps .  (reduce by rule 51)

	RPAREN	reduce by rule 51


	.	error


state 111:

	letExps : exp SEMICOLON letExps .  (reduce by rule 53)

	RPAREN	reduce by rule 53
	END	reduce by rule 53


	.	error


state 112:

	ty : ARRAY OF . ID 

	ID	shift 121


	.	error


state 113:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 122


	.	error


state 114:

	arrayList : ID LBRACK . exp RBRACK OF exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 123
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 115:

	vardec : VAR ID COLON ID ASSIGN . exp 
	vardec : VAR ID COLON ID ASSIGN . arrayList 

	ID	shift 100
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 125
	recordExp	goto 2
	lvalue	goto 1
	arrayList	goto 124

	.	error


state 116:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 127
	EQ	shift 126


	.	error


state 117:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 128


	.	error


state 118:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 129


	.	error


state 119:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 47)

	EOF	reduce by rule 47
	COMMA	reduce by rule 47
	SEMICOLON	reduce by rule 47
	RPAREN	reduce by rule 47
	RBRACK	reduce by rule 47
	RBRACE	reduce by rule 47
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	reduce by rule 47
	ELSE	reduce by rule 47
	TO	reduce by rule 47
	DO	reduce by rule 47
	IN	reduce by rule 47
	END	reduce by rule 47
	FUNCTION	reduce by rule 47
	VAR	reduce by rule 47
	TYPE	reduce by rule 47


	.	error


state 120:

	recordList : ID EQ exp COMMA . recordList 

	ID	shift 73

	recordList	goto 130

	.	error


state 121:

	ty : ARRAY OF ID .  (reduce by rule 8)

	IN	reduce by rule 8
	FUNCTION	reduce by rule 8
	VAR	reduce by rule 8
	TYPE	reduce by rule 8


	.	error


state 122:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 7)

	IN	reduce by rule 7
	FUNCTION	reduce by rule 7
	VAR	reduce by rule 7
	TYPE	reduce by rule 7


	.	error


state 123:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	arrayList : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 131
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 124:

	vardec : VAR ID COLON ID ASSIGN arrayList .  (reduce by rule 15)

	IN	reduce by rule 15
	FUNCTION	reduce by rule 15
	VAR	reduce by rule 15
	TYPE	reduce by rule 15


	.	error


state 125:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 14)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	IN	reduce by rule 14
	FUNCTION	reduce by rule 14
	VAR	reduce by rule 14
	TYPE	reduce by rule 14


	.	error


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 132
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 127:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 133


	.	error


state 128:

	tyfields : ID COLON ID .  (reduce by rule 10)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 134
	RPAREN	reduce by rule 10
	RBRACE	reduce by rule 10


	.	error


state 129:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 135
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 130:

	recordList : ID EQ exp COMMA recordList .  (reduce by rule 61)

	RBRACE	reduce by rule 61


	.	error


state 131:

	arrayList : ID LBRACK exp RBRACK . OF exp 

	OF	shift 136


	.	error


state 132:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 16)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	IN	reduce by rule 16
	FUNCTION	reduce by rule 16
	VAR	reduce by rule 16
	TYPE	reduce by rule 16


	.	error


state 133:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 137


	.	error


state 134:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 103
	RPAREN	reduce by rule 9
	RBRACE	reduce by rule 9

	tyfields	goto 138

	.	error


state 135:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 45)

	EOF	reduce by rule 45
	COMMA	reduce by rule 45
	SEMICOLON	reduce by rule 45
	RPAREN	reduce by rule 45
	RBRACK	reduce by rule 45
	RBRACE	reduce by rule 45
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	reduce by rule 45
	ELSE	reduce by rule 45
	TO	reduce by rule 45
	DO	reduce by rule 45
	IN	reduce by rule 45
	END	reduce by rule 45
	FUNCTION	reduce by rule 45
	VAR	reduce by rule 45
	TYPE	reduce by rule 45


	.	error


state 136:

	arrayList : ID LBRACK exp RBRACK OF . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 139
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 137:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 140
	recordExp	goto 2
	lvalue	goto 1

	.	error


state 138:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 11)

	RPAREN	reduce by rule 11
	RBRACE	reduce by rule 11


	.	error


state 139:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	arrayList : ID LBRACK exp RBRACK OF exp .  (reduce by rule 62)

	RBRACE	reduce by rule 62
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	IN	reduce by rule 62
	FUNCTION	reduce by rule 62
	VAR	reduce by rule 62
	TYPE	reduce by rule 62


	.	error


state 140:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 17)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	IN	reduce by rule 17
	FUNCTION	reduce by rule 17
	VAR	reduce by rule 17
	TYPE	reduce by rule 17


	.	error


state 141:


	EOF	accept


	.	error

1329 of 1847 action table entries left after compaction
140 goto table entries
